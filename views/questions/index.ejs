<!DOCTYPE html>
<%
/*
 * You may see Glitch complaining about errors in this document and that "Specia
 * "Special characters must be escaped".
 * 
 * However, there are no errors in this file and Glitch is complaining because
 * it does not understand the templating syntax that EJS uses to render this
 * file on the server.
 * 
 * Do not try to escape the template delimiters yourself.
 */
%>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Welcome â€“ QuestionBot from Message.io</title>

    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

    <!-- Optional theme -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">


    <!-- Custom styles for this template -->
    <link href="/css/app.css" rel="stylesheet">
    <link href="/css/questions/app.css" rel="stylesheet">

    <!-- Font Awesome!  -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">

    <!-- Favicon -->
    <link rel="apple-touch-icon" sizes="180x180" href="https://message.io/favicon/apple-touch-icon.png">
    <link rel="icon" type="image/png" href="https://message.io/favicon/favicon-32x32.png" sizes="32x32">
    <link rel="icon" type="image/png" href="https://message.io/favicon/favicon-16x16.png" sizes="16x16">
    <link rel="manifest" href="https://message.io/favicon/manifest.json">
    <link rel="mask-icon" href="https://message.io/favicon/safari-pinned-tab.svg" color="#5bbad5">
    <link rel="shortcut icon" href="https://message.io/favicon/favicon.ico">
    <meta name="msapplication-config" content="https://message.io/favicon/browserconfig.xml">
    <meta name="theme-color" content="#ffffff">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
      <![endif]-->
  </head>
  <body>
    <nav class="navbar navbar-custom navbar-fixed-top">
      <div class="container">
        <div class="navbar-header">
          <div class="navbar-left logo"><img src="https://cdn.glitch.com/97da0c25-cb78-4fa8-bc73-82994fe8867e%2Fm-io-white.svg?1497907421399" /></div>
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="/">QuestionBot</a>
        </div>
        <div id="navbar" class="collapse navbar-collapse">
          <ul class="nav navbar-nav">
            <li class="active"><a href="/">Home</a></li>
          </ul>
          <ul class="nav navbar-nav">
            <li class="active"><a href="/questions">Questions</a></li>
          </ul>
        </div>
        <!--/.nav-collapse -->
      </div>
    </nav>
    <!-- /start features -->
    <div class="features cases">
      <div class="container">
        <div class="row">
          <div class="col-md-12">
            <h1>Questions</h1>
            <div class="form-group has-feedback">
              <label for="faq-field">Automatically scrape questions from an existing FAQ page:</label>
              <input type="text" id="faq-field" class="form-control" placeholder="Enter the URL to the FAQ page you want to scrape here..."/>
              <span id="faq-success" class="glyphicon glyphicon-ok form-control-feedback" aria-hidden="true" style="display: none;"></span>
              <span id="faq-error" class="glyphicon glyphicon-remove form-control-feedback" aria-hidden="true" style="display: none;"></span>
            </div>
            <h4 id="thinking-error" style="display: none;">There was an error when trying to scrape questions and answers from that page.</h4>
            <div id="thinking" class="center-outer" style="display: none;">
              <h4 class="center">Please wait while we gather the questions and answers from your FAQ page...</h4>
              <br/>
              <img class="center" src="https://cdn.glitch.com/9c5faf5d-74c7-4129-898a-8c9f743f6d81%2Fthinking_robot.gif?1498754674234"/>
            </div>
            <hr>
            <div id="qas">
            </div>
            <button type="button" id="clear-all-button" class="btn btn-danger">Clear All</button>
            <hr>
            <h2>
              Unanswered Questions
            </h2>
            <div id="unanswered-qas">
              <div id="no-unanswered-questions">
                ðŸŽ‰ Hooray! There are no more unanswered questions.
              </div>
            </div>
            <hr>
            <button type="button" id="save-changes-button" class="btn btn-primary">Save Changes</button>
            <span id="save-success" style="display: none;">Your changes were saved successfully.</span>
          </div>
        </div>
      </div>
    </div>
    <!-- /end features -->
    
    <div id="qa-template" class="template" type="text/x-custom-template">
      <div class="input-group translucent qa" style="display: none;">
        <table class="form-control qa">
          <tbody>
            <tr class="q-row">
              <td>
                <b><h4>Q:</h4></b>
              </td>
              <td class="qa-td">
                <textarea rows="1" placeholder="{{ qPlaceholder }}" class="q-textarea">{{ question }}</textarea>
              </td>
            </tr>
            <tr class="a-row">
              <td>
                <b><h4>A:</h4></b>
              </td>
              <td class="qa-td">
                <textarea rows="1" placeholder="{{ aPlaceholder }}" class="a-textarea">{{ answer }}</textarea>
              </td>
            </tr>
          </tbody>
        </table>
        <span class="input-group-addon close-addon">
          <button type="button" class="close" aria-label="Close" tabindex="-1">
            <span aria-hidden="true">
              &times;
            </span>
          </button>
        </span>
      </div>
    </div>

    <%- include ../footer %>

    <!-- Bootstrap core JavaScript
      ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mustache.js/2.3.0/mustache.min.js"></script>
    <!-- Latest compiled and minified JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
    <script src="https://maxcdn.bootstrapcdn.com/js/ie10-viewport-bug-workaround.js"></script>
    <script>
      "use strict";
      
      function moveAnimate(element, newParent, callback){
        element = $(element);
        newParent = $(newParent);
        
        var margin = parseInt(element.css("margin-bottom"), 10);
        var height = element.height();
        var newFiller = $("<div></div>").appendTo(newParent);
        var oldFiller = $("<div></div>").insertAfter(element);
        newFiller.css({
          height: 0,
          marginBottom: 0
        });
        oldFiller.css({
          height: height
        });
        
        var oldOffset = element.offset();
        var oldParent = element.parent();
        element.appendTo(newParent);
        var newOffset = element.offset();

        var temp = element.clone().appendTo("body");
        temp.css({
          position: "absolute",
          left: oldOffset.left,
          top: oldOffset.top,
          width: element.width(),
          zIndex: 1000,
          boxShadow: "5px 5px 5px rgba(0, 0, 0, 0.1)"
        });
        element.hide();
        temp.animate({
          top: newOffset.top,
          left: newOffset.left
        }, {
          queue: false,
          duration: 500,
          complete: function() {
            oldFiller.remove();
            newFiller.remove();
            element.show();
            temp.remove();
            callback();
          }
        });
        oldFiller.animate({
          height: 0
        }, {
          queue: false,
          duration: 500
        });
        if (!oldParent.children("div.qa").length) {
          oldFiller.animate({
            marginBottom: -margin / 2
          }, {
            queue: false,
            duration: 500
          });
        }
        newFiller.animate({
          height: height,
          marginBottom: margin
        }, {
          queue: false,
          duration: 500
        });
      }
      
      function checkEndQas(unanswered) {
        if (!unanswered) {
          var children = $("#qas").children("div.qa");
          if (!(children.length) || !(children.last().hasClass("translucent"))) {
            appendQa({
              unanswered: false
            });
          }
        } else {
          if (!($("#unanswered-qas").children("div.qa").length)) {
            // $("#no-unanswered-questions").slideDown({
            //   duration: 500,
            //   queue: false
            // });
          }
        }
      }
      
      function prune() {
        $("#qas").children("div.qa.translucent:not(:last-child)").each(function() {
          if (!$(this).find(".a-textarea").val() && !$(this).find(".q-textarea").val()) {
            $(this).trigger("close-qa");
          }
        });
        checkEndQas(false);
      }
      
      function appendQa(options) {
        if (options.question === undefined) {
          options.question = "";
        }
        if (options.answer === undefined) {
          options.answer = "";
        }
        var newElement = $(Mustache.render($("#qa-template").html(), {
          question: options.question,
          answer: options.answer,
          qPlaceholder: "Enter your question here...",
          aPlaceholder: "Enter the answer to this question here..."
        }));
        if (options.unanswered) {
          newElement.data("originalQuestion", options.question);
        }
        function update(element, noCheckEnd) {
          window.onbeforeunload = function() {
            return true;
          };
          var parent = $(element).closest("div.qa");
          var answer = parent.find(".a-textarea");
          var question = parent.find(".q-textarea");
          if (answer.val() || (!options.unanswered && question.val())) {
            if (parent.hasClass("translucent")) {
              parent.removeClass("translucent");
              if (!noCheckEnd) {
                checkEndQas(options.unanswered);
              }
            }
          } else {
            if (!parent.hasClass("translucent")) {
              parent.addClass("translucent");
            }
          }
          if (answer.val()) {
            answer.height("auto");
            answer.height(answer[0].scrollHeight);
          }
          if (question.val()) {
            question.height("auto");
            question.height(question[0].scrollHeight);
          }
        }
        function change() {
          var parent = $(this).closest("div.qa");
          if (!parent.hasClass("translucent")) {
            if (options.unanswered) {
              $.ajax({
                method: "DELETE",
                url: "/api/questions/unanswered/" + encodeURIComponent(parent.data("originalQuestion"))
              });
              moveAnimate(parent, "#qas", function() {
                options.unanswered = false;
                checkEndQas(true);
              });
            }
          }
          checkEndQas(options.unanswered);
        }
        var qTextarea = newElement.find(".q-textarea");
        qTextarea.change(change);
        newElement.find(".a-textarea").change(change);
        newElement.on("close-qa", function() {
          if (options.unanswered) {
            $.ajax({
              method: "DELETE",
              url: "/api/questions/unanswered/" + encodeURIComponent($(this).data("originalQuestion"))
            });
          }
          $(this).hide(500, function() {
            $(this).remove();
            checkEndQas(options.unanswered);
          });
        });
        newElement.on("input", function() {
          update(this);
        })
        newElement.find("span.close-addon, button.close").click(function() {
          $(this).closest("div.qa").trigger("close-qa");
        });
        newElement.appendTo((options.unanswered) ? "#unanswered-qas" : "#qas").show(500);
        if (options.unanswered) {
          $("#no-unanswered-questions").slideUp(500);
        }
        setTimeout(function() {
          update(newElement, options.noCheckEnd);
        }, 500);
        return newElement;
      }
      
      function clearAll() {
        $("#qas").children("div.qa").each(function() {
          $(this).trigger("close-qa");
        });
      }
      
      $(document).ready(function() {
        function qasSuccess(data) {
          for (var question in data) {
            appendQa({
              question: question,
              answer: data[question],
              unanswered: false,
              noCheckEnd: true
            });
          }
          setTimeout(function() {
            prune();
            $.fx.off = false;
          }, 500);
        }
        
        function loadQas() {
          $.fx.off = true;
          $.ajax({
            method: "GET",
            url: "/api/questions",
            success: qasSuccess,
            dataType: "json"
          });
        }
        loadQas();
        
        $.fx.off = true;
        $.ajax({
          method: "GET",
          url: "/api/questions/unanswered",
          success: function(data) {
            for (var i = 0; i < data.length; i++) {
              appendQa({
                question: data[i],
                unanswered: true,
                noCheckEnd: true
              });
            }
            setTimeout(function() {
              checkEndQas(true);
            }, 500);
            $.fx.off = false;
          },
          dataType: "json"
        });
        
        var faqFieldTimer = undefined;
        $("#faq-field").on("input", function() {
          if (faqFieldTimer !== undefined) {
            clearTimeout(faqFieldTimer);
          }
          var $this = $(this);
          $this.parent().removeClass("has-success").removeClass("has-error");
          $("#faq-success, #faq-error").hide();
          faqFieldTimer = setTimeout(function() {
            if (!$this.val()) {
              return;
            }
            if (!/^(https?|ftp):\/\/[^\s\/$.?#].[^\s]*$/i.test($this.val())) {
              $this.parent().addClass("has-error");
              $("#faq-error").fadeIn(250);
            } else {
              $this.parent().addClass("has-success");
              $("#thinking").slideDown(500);
              $("#thinking-error").slideUp(500);
              $.ajax({
                method: "POST",
                url: "/api/questions",
                data: {
                  url: $("#faq-field").val()
                },
                success: qasSuccess,
                error: function(data, status, error) {
                  $("#thinking-error").slideDown(500);
                },
                complete: function() {
                  $("#thinking").slideUp(500);
                },
                dataType: "json"
              });
              $("#faq-success").fadeIn(250);
            }
          }, 1000);
        });
        
        $("#clear-all-button").click(clearAll);
        
        $("#save-changes-button").click(function() {
          prune();
          var qa = {}
          $("#qas").children("div.qa:not(.translucent)").each(function() {
            qa[$(this).find(".q-textarea").val()] = $(this).find(".a-textarea").val();
          });
          $.ajax({
            method: "PUT",
            url: "/api/questions",
            data: qa,
            success: function(data) {
              window.onbeforeunload = null;
              $("#save-success").fadeIn(250);
              setTimeout(function() {
                $("#save-success").fadeOut(250);
              }, 1000);
            }
          });
        });
        
        // Set up long-polling.
        function longPoll() {
          $.ajax({
            method: "POST",
            url: "/api/questions/unanswered",
            success: function(data) {
              appendQa({
                question: data,
                unanswered: true
              });
            },
            complete: function() {
              longPoll();
            },
            timeout: 30000
          });
        }
        longPoll();
      });
    </script>
  </body>
</html>